# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class CirconusAm < Formula
  desc "Circonus Agent Manager"
  homepage "https://circonus.com"
  version "0.1.2"
  license "MIT"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/circonus/agent-manager/releases/download/v0.1.2/circonus-am_0.1.2_darwin_arm64.tar.gz"
      sha256 "520b378a02e14a432c3ea824cd13593edd65bdc974d15193475577804497841f"

      def install
        sbin.install "sbin/circonus-am"
        pkgetc.install "etc/circonus-am.yaml" => "circonus-am.yaml"
        doc.install "README.md", "LICENSE"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/circonus/agent-manager/releases/download/v0.1.2/circonus-am_0.1.2_darwin_amd64.tar.gz"
      sha256 "3c5dd85a922b5c207dec91506680d850d91c4b85837ea58f6aef55d1943803b5"

      def install
        sbin.install "sbin/circonus-am"
        pkgetc.install "etc/circonus-am.yaml" => "circonus-am.yaml"
        doc.install "README.md", "LICENSE"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/circonus/agent-manager/releases/download/v0.1.2/circonus-am_0.1.2_linux_arm64.tar.gz"
      sha256 "7fb5575a24a3fc04e8f16e53b08640f5470519da71868dc6059516318d088c97"

      def install
        sbin.install "sbin/circonus-am"
        pkgetc.install "etc/circonus-am.yaml" => "circonus-am.yaml"
        doc.install "README.md", "LICENSE"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/circonus/agent-manager/releases/download/v0.1.2/circonus-am_0.1.2_linux_amd64.tar.gz"
      sha256 "c606e356156c5ba4f4a43c51376cbfd7b1856cefac9599252965ffa4e8dd99ed"

      def install
        sbin.install "sbin/circonus-am"
        pkgetc.install "etc/circonus-am.yaml" => "circonus-am.yaml"
        doc.install "README.md", "LICENSE"
      end
    end
  end

  def caveats
    <<~EOS
      1. Run #{sbin}/circonus-am --register="registration token"
      2. Run "brew services start circonus-agent-manager"

      Or, if upgrading, run "brew services restart circonus-agent-manager"
    EOS
  end

  service do
    run [opt_sbin/"circonus-am", "--config", etc/"circonus-am.yaml"]
    keep_alive true
    log_path var/"log/circonus-agent-manager.log"
    error_log_path var/"log/circonus-agent-manager.log"
  end

  test do
    system "#{sbin}/circonus-am --version"
  end
end
