# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class CirconusAm < Formula
  desc "Circonus Agent Manager"
  homepage "https://circonus.com"
  version "0.1.3"
  license "MIT"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/circonus/agent-manager/releases/download/v0.1.3/circonus-am_0.1.3_darwin_arm64.tar.gz"
      sha256 "e47a60d0708bd0c545482ea59436dd32a41c5420c980f12561c79946f1ba4bdf"

      def install
        sbin.install "sbin/circonus-am"
        pkgetc.install "etc/circonus-am.yaml" => "circonus-am.yaml"
        doc.install "README.md", "LICENSE"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/circonus/agent-manager/releases/download/v0.1.3/circonus-am_0.1.3_darwin_amd64.tar.gz"
      sha256 "989d04951c62347ae21a20ad453eaa0d72d29a1410c6214b348bbfd87f2e8f96"

      def install
        sbin.install "sbin/circonus-am"
        pkgetc.install "etc/circonus-am.yaml" => "circonus-am.yaml"
        doc.install "README.md", "LICENSE"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/circonus/agent-manager/releases/download/v0.1.3/circonus-am_0.1.3_linux_arm64.tar.gz"
      sha256 "47926a7a081356bf2f700f7a05d85f0d6a7c83299ff2c32d7181d99eb698afa0"

      def install
        sbin.install "sbin/circonus-am"
        pkgetc.install "etc/circonus-am.yaml" => "circonus-am.yaml"
        doc.install "README.md", "LICENSE"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/circonus/agent-manager/releases/download/v0.1.3/circonus-am_0.1.3_linux_amd64.tar.gz"
      sha256 "61640669213f911152d6ea956122e64990c280939fc035fbae00a712094f467f"

      def install
        sbin.install "sbin/circonus-am"
        pkgetc.install "etc/circonus-am.yaml" => "circonus-am.yaml"
        doc.install "README.md", "LICENSE"
      end
    end
  end

  def caveats
    <<~EOS
      1. Run #{sbin}/circonus-am --register="registration token"
      2. Run "brew services start circonus-agent-manager"

      Or, if upgrading, run "brew services restart circonus-agent-manager"
    EOS
  end

  service do
    run [opt_sbin/"circonus-am", "--config", etc/"circonus-am.yaml"]
    keep_alive true
    log_path var/"log/circonus-agent-manager.log"
    error_log_path var/"log/circonus-agent-manager.log"
  end

  test do
    system "#{sbin}/circonus-am --version"
  end
end
