# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class CirconusAm < Formula
  desc "Circonus Agent Manager"
  homepage "https://circonus.com"
  version "0.1.4"
  license "MIT"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/circonus/agent-manager/releases/download/v0.1.4/circonus-am_0.1.4_darwin_arm64.tar.gz"
      sha256 "5a16eee022ce62b9436bfeec2bc0a86b9b7ac78327981907297b6c3d0945b493"

      def install
        sbin.install "sbin/circonus-am"
        pkgetc.install "etc/circonus-am.yaml" => "circonus-am.yaml"
        doc.install "README.md", "LICENSE"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/circonus/agent-manager/releases/download/v0.1.4/circonus-am_0.1.4_darwin_amd64.tar.gz"
      sha256 "9c7a5ea5e5f1943a50b89b9d4e18f22d30e3ac01ada9a480653e514b78fcbcc4"

      def install
        sbin.install "sbin/circonus-am"
        pkgetc.install "etc/circonus-am.yaml" => "circonus-am.yaml"
        doc.install "README.md", "LICENSE"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/circonus/agent-manager/releases/download/v0.1.4/circonus-am_0.1.4_linux_arm64.tar.gz"
      sha256 "66cedff97304c5d962fa45cb6c23ddb66bab411cdd923ba108e178fe7f80a6f2"

      def install
        sbin.install "sbin/circonus-am"
        pkgetc.install "etc/circonus-am.yaml" => "circonus-am.yaml"
        doc.install "README.md", "LICENSE"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/circonus/agent-manager/releases/download/v0.1.4/circonus-am_0.1.4_linux_amd64.tar.gz"
      sha256 "0b26f42e1b552376fc3d2c5b65770f615a9133e04139e42d5091677a71a153e6"

      def install
        sbin.install "sbin/circonus-am"
        pkgetc.install "etc/circonus-am.yaml" => "circonus-am.yaml"
        doc.install "README.md", "LICENSE"
      end
    end
  end

  def caveats
    <<~EOS
      1. Run #{sbin}/circonus-am --register="registration token"
      2. Run "brew services start circonus-agent-manager"

      Or, if upgrading, run "brew services restart circonus-agent-manager"
    EOS
  end

  service do
    run [opt_sbin/"circonus-am", "--config", etc/"circonus-am.yaml"]
    keep_alive true
    log_path var/"log/circonus-agent-manager.log"
    error_log_path var/"log/circonus-agent-manager.log"
  end

  test do
    system "#{sbin}/circonus-am --version"
  end
end
